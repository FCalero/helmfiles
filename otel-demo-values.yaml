opentelemetry-collector:
  config:
    receivers:
      prometheus:
        config:
          scrape_configs:
            - job_name: 'otel-collector'
              scrape_interval: 10s
              static_configs:
                - targets: ['0.0.0.0:8888']
                  labels:
                    deployment.environment.name: 'fcalero-local'
    processors:
      attributes/insert:
        actions:
          - key: deployment.environment.name
            action: upsert
            value: fcalero-local
      transform/drop_k8s_keys:
        error_mode: ignore
        trace_statements:
          - context: resource
            statements:
              - delete_key(attributes, "k8s.cluster.name")
              - delete_key(attributes, "k8s.container.name")
              - delete_key(attributes, "k8s.cronjob.name")
              - delete_key(attributes, "k8s.daemonset.name")
              - delete_key(attributes, "k8s.deployment.name")
              - delete_key(attributes, "k8s.job.name")
              - delete_key(attributes, "k8s.namespace.name")
              - delete_key(attributes, "k8s.pod.name")
              - delete_key(attributes, "k8s.replicaset.name")
              - delete_key(attributes, "k8s.statefulset.name")
      resource:
        attributes:
          - key: deployment.environment.name
            action: upsert
            value: fcalero-local
    connectors:
      grafanacloud:
        # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/connector/grafanacloudconnector
        host_identifiers: ["host.name"]
    service:
      extensions: [basicauth/grafana_cloud, health_check]
      pipelines:
        traces:
          processors: [memory_limiter, resource, transform, transform/drop_k8s_keys, batch]
          exporters: [otlp, debug, spanmetrics, otlphttp/grafana_cloud, grafanacloud]
        metrics:
          receivers: [httpcheck/frontend-proxy, redis, otlp, spanmetrics]
          processors: [memory_limiter, resource, attributes/insert, transform/drop_k8s_keys, batch]
          exporters: [otlphttp/prometheus, debug, otlphttp/grafana_cloud]
        metrics/grafanacloud:
          receivers: [prometheus, otlp, grafanacloud]
          processors: [batch, attributes/insert, transform/drop_k8s_keys, resource]
          exporters: [otlphttp/grafana_cloud]
        logs:
          processors: [memory_limiter, resource, transform/drop_k8s_keys, batch]
          exporters: [opensearch, debug, otlphttp/grafana_cloud]

opensearch:
  enabled: false